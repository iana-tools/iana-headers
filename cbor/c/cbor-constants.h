
// IANA CBOR Headers
// Source: https://github.com/mofosyne/iana-headers

typedef enum cbor_simple_value_t {
  /* Autogenerated IANA CBOR Content-Formats (Source: https://www.iana.org/assignments/cbor-simple-values/cbor-simple-values.xhtml#simple) */

  /* 0-19 : Standards Action */
  // False; Ref: [RFC8949]
  CBOR_SIMPLE_VALUE_FALSE = 20,
  // True; Ref: [RFC8949]
  CBOR_SIMPLE_VALUE_TRUE = 21,
  // Null; Ref: [RFC8949]
  CBOR_SIMPLE_VALUE_NULL = 22,
  // Undefined; Ref: [RFC8949]
  CBOR_SIMPLE_VALUE_UNDEFINED = 23

  /* 32-255 : Specification Required */
} cbor_simple_value_t;

typedef enum cbor_tag_t {
  /* Autogenerated IANA CBOR Tags (Source: https://www.iana.org/assignments/cbor-tags/cbor-tags.xhtml#tags) */

  /* 0-23 : Standards Action */
  // Standard date/time string; see Section 3.4.1; Ref: [RFC8949]
  CBOR_TAG_0_STD_DATE_TIME_STRING = 0,
  // Epoch-based date/time; see Section 3.4.2; Ref: [RFC8949]
  CBOR_TAG_1_EPOCH_BASED_DATE_TIME = 1,
  // Unsigned bignum; see Section 3.4.3; Ref: [RFC8949]
  CBOR_TAG_2_UNSIGNED_BIGNUM = 2,
  // Negative bignum; see Section 3.4.3; Ref: [RFC8949]
  CBOR_TAG_3_NEGATIVE_BIGNUM = 3,
  // Decimal fraction; see Section 3.4.4; Ref: [RFC8949]
  CBOR_TAG_4_DECIMAL_FRACTION = 4,
  // Bigfloat; see Section 3.4.4; Ref: [RFC8949]
  CBOR_TAG_5_BIGFLOAT = 5,
  // COSE Single Recipient Encrypted Data Object; Ref: [RFC9052]
  CBOR_TAG_16_COSE_SINGLE_RECIPIENT_ENCRYPTED_DATA_OBJECT = 16,
  // COSE Mac w/o Recipients Object; Ref: [RFC9052]
  CBOR_TAG_17_COSE_MAC_W_O_RECIPIENTS_OBJECT = 17,
  // COSE Single Signer Data Object; Ref: [RFC9052]
  CBOR_TAG_18_COSE_SINGLE_SIGNER_DATA_OBJECT = 18,
  // COSE standalone V2 countersignature; Ref: [RFC9338]
  CBOR_TAG_19_COSE_STANDALONE_V2_COUNTERSIGNATURE = 19,
  // Expected conversion to base64url encoding; see Section 3.4.5.2; Ref: [RFC8949]
  CBOR_TAG_21_EXPECTED_CONVERSION_TO_BASE64URL_ENCODING = 21,
  // Expected conversion to base64 encoding; see Section 3.4.5.2; Ref: [RFC8949]
  CBOR_TAG_22_EXPECTED_CONVERSION_TO_BASE64_ENCODING = 22,
  // Expected conversion to base16 encoding; see Section 3.4.5.2; Ref: [RFC8949]
  CBOR_TAG_23_EXPECTED_CONVERSION_TO_BASE16_ENCODING = 23,

  /* 24-32767 : Specification Required */
  // Encoded CBOR data item; see Section 3.4.5.1; Ref: [RFC8949]
  CBOR_TAG_24_ENCODED_CBOR_DATA_ITEM = 24,
  // reference the nth previously seen string; Ref: [http://cbor.schmorp.de/stringref][Marc_A._Lehmann]
  CBOR_TAG_25_REF_THE_NTH_PREV_SEEN_STRING = 25,
  // Serialised Perl object with classname and constructor arguments; Ref: [http://cbor.schmorp.de/perl-object][Marc_A._Lehmann]
  CBOR_TAG_26_SERIALISED_PERL_OBJ_WITH_CLASSNAME_CONSTRUCTOR_ARG = 26,
  // Serialised language-independent object with type name and constructor arguments; Ref: [http://cbor.schmorp.de/generic-object][Marc_A._Lehmann]
  CBOR_TAG_27_SERIALISED_LANG_INDEP_OBJ_WITH_TYPE_NAME_CONSTRUCTOR_ARG = 27,
  // mark value as (potentially) shared; Ref: [http://cbor.schmorp.de/value-sharing][Marc_A._Lehmann]
  CBOR_TAG_28_MARK_VALUE_AS_SHARED = 28,
  // reference nth marked value; Ref: [http://cbor.schmorp.de/value-sharing][Marc_A._Lehmann]
  CBOR_TAG_29_REF_NTH_MARKED_VALUE = 29,
  // Rational number; Ref: [http://peteroupc.github.io/CBOR/rational.html][Peter_Occil]
  CBOR_TAG_30_RATIONAL_NUMBER = 30,
  // Absent value in a CBOR Array; Ref: [https://github.com/svaarala/cbor-specs/blob/master/cbor-absent-tag.rst][Sami_Vaarala]
  CBOR_TAG_31_ABSENT_VALUE_IN_A_CBOR_ARRAY = 31,
  // URI; see Section 3.4.5.3; Ref: [RFC8949]
  CBOR_TAG_32_URI = 32,
  // base64url; see Section 3.4.5.3; Ref: [RFC8949]
  CBOR_TAG_33_BASE64URL = 33,
  // base64; see Section 3.4.5.3; Ref: [RFC8949]
  CBOR_TAG_34_BASE64 = 34,
  // Regular expression; see Section 2.4.4.3; Ref: [RFC7049]
  CBOR_TAG_35_REGULAR_EXPRESSION = 35,
  // MIME message; see Section 3.4.5.3; Ref: [RFC8949]
  CBOR_TAG_36_MIME_MSG = 36,
  // Binary UUID ([RFC4122, Section 4.1.2]); Ref: [https://github.com/lucas-clemente/cbor-specs/blob/master/uuid.md][Lucas_Clemente]
  CBOR_TAG_37_BINARY_UUID = 37,
  // Language-tagged string; Ref: [RFC9290, Appendix A]
  CBOR_TAG_38_LANGUAGE_TAGGED_STRING = 38,
  // Identifier; Ref: [https://github.com/lucas-clemente/cbor-specs/blob/master/id.md][Lucas_Clemente]
  CBOR_TAG_39_ID = 39,
  // Multi-dimensional Array, row-major order; Ref: [RFC8746]
  CBOR_TAG_40_MULTI_DIMENSIONAL_ARRAY_ROW_MAJOR_ORDER = 40,
  // Homogeneous Array; Ref: [RFC8746]
  CBOR_TAG_41_HOMOGENEOUS_ARRAY = 41,
  // IPLD content identifier; Ref: [https://github.com/ipld/cid-cbor/][Volker_Mische]
  CBOR_TAG_42_IPLD_CONTENT_ID = 42,
  // YANG bits datatype; see Section 6.7.; Ref: [RFC9254]
  CBOR_TAG_43_YANG_BITS_DATATYPE = 43,
  // YANG enumeration datatype; see Section 6.6.; Ref: [RFC9254]
  CBOR_TAG_44_YANG_ENUMERATION_DATATYPE = 44,
  // YANG identityref datatype; see Section 6.10.; Ref: [RFC9254]
  CBOR_TAG_45_YANG_IDENTITYREF_DATATYPE = 45,
  // YANG instance-identifier datatype; see Section 6.13.; Ref: [RFC9254]
  CBOR_TAG_46_YANG_INSTANCE_ID_DATATYPE = 46,
  // YANG Schema Item iDentifier (sid); see Section 3.2.; Ref: [RFC9254]
  CBOR_TAG_47_YANG_SCHEMA_ITEM_ID = 47,
  // IPv4, [prefixlen,IPv4], [IPv4,prefixpart]; Ref: [RFC9164]
  CBOR_TAG_52_IPV4 = 52,
  // IPv6, [prefixlen,IPv6], [IPv6,prefixpart]; Ref: [RFC9164]
  CBOR_TAG_54_IPV6 = 54,
  // CBOR Web Token (CWT); Ref: [RFC8392][Michael_B._Jones]
  CBOR_TAG_61_CBOR_WEB_TOKEN = 61,
  // Encoded CBOR Sequence [RFC8742]; Ref: [draft-bormann-cbor-notable-tags-02, Section 2.1]
  CBOR_TAG_63_ENCODED_CBOR_SEQUENCE = 63,
  // uint8 Typed Array; Ref: [RFC8746]
  CBOR_TAG_64_UINT8_TYPED_ARRAY = 64,
  // uint16, big endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_65_UINT16_BIG_ENDIAN_TYPED_ARRAY = 65,
  // uint32, big endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_66_UINT32_BIG_ENDIAN_TYPED_ARRAY = 66,
  // uint64, big endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_67_UINT64_BIG_ENDIAN_TYPED_ARRAY = 67,
  // uint8 Typed Array, clamped arithmetic; Ref: [RFC8746]
  CBOR_TAG_68_UINT8_TYPED_ARRAY_CLAMPED_ARITHMETIC = 68,
  // uint16, little endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_69_UINT16_LITTLE_ENDIAN_TYPED_ARRAY = 69,
  // uint32, little endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_70_UINT32_LITTLE_ENDIAN_TYPED_ARRAY = 70,
  // uint64, little endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_71_UINT64_LITTLE_ENDIAN_TYPED_ARRAY = 71,
  // sint8 Typed Array; Ref: [RFC8746]
  CBOR_TAG_72_SINT8_TYPED_ARRAY = 72,
  // sint16, big endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_73_SINT16_BIG_ENDIAN_TYPED_ARRAY = 73,
  // sint32, big endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_74_SINT32_BIG_ENDIAN_TYPED_ARRAY = 74,
  // sint64, big endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_75_SINT64_BIG_ENDIAN_TYPED_ARRAY = 75,
  // sint16, little endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_77_SINT16_LITTLE_ENDIAN_TYPED_ARRAY = 77,
  // sint32, little endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_78_SINT32_LITTLE_ENDIAN_TYPED_ARRAY = 78,
  // sint64, little endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_79_SINT64_LITTLE_ENDIAN_TYPED_ARRAY = 79,
  // IEEE 754 binary16, big endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_80_IEEE_754_BINARY16_BIG_ENDIAN_TYPED_ARRAY = 80,
  // IEEE 754 binary32, big endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_81_IEEE_754_BINARY32_BIG_ENDIAN_TYPED_ARRAY = 81,
  // IEEE 754 binary64, big endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_82_IEEE_754_BINARY64_BIG_ENDIAN_TYPED_ARRAY = 82,
  // IEEE 754 binary128, big endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_83_IEEE_754_BINARY128_BIG_ENDIAN_TYPED_ARRAY = 83,
  // IEEE 754 binary16, little endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_84_IEEE_754_BINARY16_LITTLE_ENDIAN_TYPED_ARRAY = 84,
  // IEEE 754 binary32, little endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_85_IEEE_754_BINARY32_LITTLE_ENDIAN_TYPED_ARRAY = 85,
  // IEEE 754 binary64, little endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_86_IEEE_754_BINARY64_LITTLE_ENDIAN_TYPED_ARRAY = 86,
  // IEEE 754 binary128, little endian, Typed Array; Ref: [RFC8746]
  CBOR_TAG_87_IEEE_754_BINARY128_LITTLE_ENDIAN_TYPED_ARRAY = 87,
  // COSE Encrypted Data Object; Ref: [RFC9052]
  CBOR_TAG_96_COSE_ENCRYPTED_DATA_OBJECT = 96,
  // COSE MACed Data Object; Ref: [RFC9052]
  CBOR_TAG_97_COSE_MACED_DATA_OBJECT = 97,
  // COSE Signed Data Object; Ref: [RFC9052]
  CBOR_TAG_98_COSE_SIGNED_DATA_OBJECT = 98,
  // Number of days since the epoch date 1970-01-01; Ref: [RFC8943]
  CBOR_TAG_100_NUMBER_OF_DAYS_SINCE_THE_EPOCH_DATE_1970_01_01 = 100,
  // alternatives as given by the uint + 128; see Section 9.1; Ref: [draft-bormann-cbor-notable-tags-07]
  CBOR_TAG_101_ALTERNATIVES_AS_GIVEN_BY_THE_UINT_PLUS_128 = 101,
  // Geographic Coordinates; Ref: [https://github.com/allthingstalk/cbor/blob/master/CBOR-Tag103-Geographic-Coordinates.md][Danilo_Vidovic]
  CBOR_TAG_103_GEOGRAPHIC_COORDINATES = 103,
  // Geographic Coordinate Reference System WKT or EPSG number; Ref: [draft-clarke-cbor-crs]
  CBOR_TAG_104_GEO_COORD_REF_SYSTEM_WKT_OR_EPSG_NUM = 104,
  // relative object identifier (BER encoding); SDNV [RFC6256] sequence; Ref: [RFC9090]
  CBOR_TAG_110_RELATIVE_OBJECT_ID = 110,
  // object identifier (BER encoding); Ref: [RFC9090]
  CBOR_TAG_111_OBJECT_ID = 111,
  // object identifier (BER encoding), relative to 1.3.6.1.4.1; Ref: [RFC9090]
  CBOR_TAG_112_OBJECT_ID_RELATIVE_TO_1_3_6_1_4_1 = 112,
  // Internet of Things Data Point; Ref: [https://github.com/allthingstalk/cbor/blob/master/CBOR-Tag120-Internet-of-Things-Data-Points.md][Danilo_Vidovic]
  CBOR_TAG_120_INTERNET_OF_THINGS_DATA_POINT = 120,
  // Gordian Envelope; Ref: [draft-mcnally-envelope-05]
  CBOR_TAG_200_GORDIAN_ENVELOPE = 200,
  // mark value as having string references; Ref: [http://cbor.schmorp.de/stringref][Marc_A._Lehmann]
  CBOR_TAG_256_MARK_VALUE_AS_HAVING_STRING_REFERENCES = 256,
  // Binary MIME message; Ref: [http://peteroupc.github.io/CBOR/binarymime.html][Peter_Occil]
  CBOR_TAG_257_BINARY_MIME_MSG = 257,
  // Mathematical finite set; Ref: [https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md][Alfredo_Di_Napoli]
  CBOR_TAG_258_MATHEMATICAL_FINITE_SET = 258,
  // Map datatype with key-value operations (e.g. `.get()/.set()/.delete()`); Ref: [https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec--explicit-maps.md][Shane_Holloway]
  CBOR_TAG_259_MAP_DATATYPE_WITH_KEY_VAL_OP_SET_DELETE = 259,
  // Network Address (IPv4 or IPv6 or MAC Address) (DEPRECATED in favor of 52 and 54        for IP addresses); Ref: [http://www.employees.org/~ravir/cbor-network.txt][Ravi_Raju][RFC9164]
  CBOR_TAG_260_NETWORK_ADDRESS = 260,
  // Network Address Prefix (IPv4 or IPv6 Address + Mask Length) (DEPRECATED in favor of 52 and 54        for IP addresses); Ref: [https://github.com/toravir/CBOR-Tag-Specs/blob/master/networkPrefix.md][Ravi_Raju][RFC9164]
  CBOR_TAG_261_NETWORK_ADDRESS_PREFIX = 261,
  // Embedded JSON Object; Ref: [https://github.com/toravir/CBOR-Tag-Specs/blob/master/embeddedJSON.md][Ravi_Raju]
  CBOR_TAG_262_EMBEDDED_JSON_OBJECT = 262,
  // Hexadecimal string; Ref: [https://github.com/toravir/CBOR-Tag-Specs/blob/master/hexString.md][Ravi_Raju]
  CBOR_TAG_263_HEXADECIMAL_STRING = 263,
  // Decimal fraction with arbitrary exponent; Ref: [http://peteroupc.github.io/CBOR/bigfrac.html][Peter_Occil]
  CBOR_TAG_264_DECIMAL_FRACTION_WITH_ARBITRARY_EXPONENT = 264,
  // Bigfloat with arbitrary exponent; Ref: [http://peteroupc.github.io/CBOR/bigfrac.html][Peter_Occil]
  CBOR_TAG_265_BIGFLOAT_WITH_ARBITRARY_EXPONENT = 265,
  // Internationalized resource identifier (IRI); Ref: [https://peteroupc.github.io/CBOR/iri.html][Peter_Occil]
  CBOR_TAG_266_INTERNATIONALIZED_RESOURCE_ID = 266,
  // Internationalized resource identifier reference (IRI reference); Ref: [https://peteroupc.github.io/CBOR/iri.html][Peter_Occil]
  CBOR_TAG_267_INTERNATIONALIZED_RESOURCE_ID_REF = 267,
  // Extended decimal fraction; Ref: [https://peteroupc.github.io/CBOR/extended.html][Peter_Occil]
  CBOR_TAG_268_EXTENDED_DECIMAL_FRACTION = 268,
  // Extended bigfloat; Ref: [https://peteroupc.github.io/CBOR/extended.html][Peter_Occil]
  CBOR_TAG_269_EXTENDED_BIGFLOAT = 269,
  // Extended rational number; Ref: [https://peteroupc.github.io/CBOR/extended.html][Peter_Occil]
  CBOR_TAG_270_EXTENDED_RATIONAL_NUMBER = 270,
  // DDoS Open Threat Signaling (DOTS) signal channel object, as defined in [RFC9132]; Ref: [RFC9132]
  CBOR_TAG_271_DDOS_OPEN_THREAT_SIGNALING_SIG_CHN_OBJ = 271,
  // Non-UTF-8 CESU-8 string; Ref: [https://github.com/svaarala/cbor-specs/blob/master/cbor-nonutf8-string-tags.rst][Sami_Vaarala]
  CBOR_TAG_272_NON_UTF_8_CESU_8_STRING = 272,
  // Non-UTF-8 WTF-8 string; Ref: [https://github.com/svaarala/cbor-specs/blob/master/cbor-nonutf8-string-tags.rst][Sami_Vaarala]
  CBOR_TAG_273_NON_UTF_8_WTF_8_STRING = 273,
  // Non-UTF-8 MUTF-8 string; Ref: [https://github.com/svaarala/cbor-specs/blob/master/cbor-nonutf8-string-tags.rst][Sami_Vaarala]
  CBOR_TAG_274_NON_UTF_8_MUTF_8_STRING = 274,
  // Map contains only keys that are of type Text String (major type 3); Ref: [https://github.com/ecorm/cbor-tag-text-key-map][Emile_Cormier]
  CBOR_TAG_275_MAP_CONTAINS_ONLY_KEYS_THAT_ARE_OF_TYPE_TXT_STR = 275,
  // ERIS binary read capability; Ref: [http://purl.org/eris]
  CBOR_TAG_276_ERIS_BINARY_READ_CAPABILITY = 276,
  // Universal Geographical Area Description (GAD) shape; see Section 5; Ref: [TS 23.032][Mathew_Meins]
  CBOR_TAG_277_UNIVERSAL_GEO_AREA_DESCRIPTION_SHAPE = 277,
  // Universal Geographical Area Description (GAD) description of velocity; see Section 8; Ref: [TS 23.032][Mathew_Meins]
  CBOR_TAG_278_UNIVERSAL_GEO_AREA_DESCRIPTION_DESCRIPTION_OF_VELOCITY = 278,
  // extended time; Ref: [draft-bormann-cbor-time-tag-01]
  CBOR_TAG_1001_EXTENDED_TIME = 1001,
  // duration; Ref: [draft-bormann-cbor-time-tag-01]
  CBOR_TAG_1002_DURATION = 1002,
  // period; Ref: [draft-bormann-cbor-time-tag-01]
  CBOR_TAG_1003_PERIOD = 1003,
  // [RFC3339] full-date string; Ref: [RFC8943]
  CBOR_TAG_1004_FULL_DATE_STRING = 1004,
  // Object type identifier; Ref: [draft-rundgren-cotx-04]
  CBOR_TAG_1010_OBJECT_TYPE_ID = 1010,
  // Multi-dimensional Array, column-major order; Ref: [RFC8746]
  CBOR_TAG_1040_MULTI_DIMENSIONAL_ARRAY_COLUMN_MAJOR_ORDER = 1040,
  // [COSE algorithm identifier, Base Hash value]; Ref: [draft-bormann-cbor-notable-tags-09, Section 3.1.1]
  CBOR_TAG_18556_COSE_ALGORITHM_ID_BASE_HASH_VALUE = 18556,
  // I-Regexp; Ref: [draft-bormann-cbor-notable-tags-09, Section 2.1][draft-ietf-jsonpath-iregexp-08]
  CBOR_TAG_21065_I_REGEXP = 21065,
  // ECMAScript RegExp [https://262.ecma-international.org/14.0/#sec-regexp-regular-expression-objects]; Ref: [https://github.com/hildjj/cbor-specs/blob/main/regexp.md][Joe_Hildebrand]
  CBOR_TAG_21066_ECMASCRIPT_REGEXP = 21066,
  // hint that indicates an additional level of indirection; Ref: [http://cbor.schmorp.de/indirection][Marc_A._Lehmann]
  CBOR_TAG_22098_HINT_THAT_INDICATES_AN_ADD_LVL_OF_INDIRECTION = 22098,
  // Capture [3]; Ref: [https://github.com/japhb/cbor-specs/blob/main/capture.md][Geoffrey_Broadwell]
  CBOR_TAG_25441_CAPTURE = 25441,

  /* 32768-18446744073709551615 : First Come First Served */
  // Identifier for a FHIR constant; Ref: [Stefan_Genchev]
  CBOR_TAG_32768_ID_FOR_A_FHIR_CONSTANT = 32768,
  // External reference; Ref: [https://gitlab.com/Hawk777/cbor-specs/-/blob/main/external-reference.md][Christopher_Head]
  CBOR_TAG_32769_EXTERNAL_REF = 32769,
  // A confidentiality clearance. The key value pairs of the map are defined in ADatP-4774.4; Ref: [Aidan_Murdock]
  CBOR_TAG_42600_A_CONFIDENTIALITY_CLEARANCE = 42600,
  // A metadata binding. The elements of the array are defined in AdatP-4778.5. The tag is also used as part of the magic number in on-disk detached and encapsulating bindings.; Ref: [Aidan_Murdock]
  CBOR_TAG_42601_A_METADATA_BINDING = 42601,
  // A collection of NCMS metadata elements. The key value pairs of the map are defined in AdatP-5636.4; Ref: [Aidan_Murdock]
  CBOR_TAG_42602_A_COLLECTION_OF_NCMS_METADATA_ELEMENTS = 42602,
  // Single complex number: array elements are real (I) and imaginary (Q) components; Ref: [Saajan_Chana]
  CBOR_TAG_43000_SINGLE_COMPLEX_NUMBER = 43000,
  // Array of complex numbers in interleaved form: complex value k is stored with real (I) part at array index 2k and imaginary (Q) part at index (2k + 1); Ref: [Saajan_Chana]
  CBOR_TAG_43001_ARRAY_OF_COMPLEX_NUMBERS_IN_INTERLEAVED_FORM = 43001,
  // PlatformV_IS_ID; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50000_PLATFORMV_IS_ID = 50000,
  // PlatformV_IS_NAME; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50001_PLATFORMV_IS_NAME = 50001,
  // PlatformV_IS_VALUE; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50002_PLATFORMV_IS_VALUE = 50002,
  // PlatformV_HAS_COMPOSITE_VALUE; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50003_PLATFORMV_HAS_COMPOSITE_VALUE = 50003,
  // PlatformV_HAS_MAPPED_VALUE; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50004_PLATFORMV_HAS_MAPPED_VALUE = 50004,
  // PlatformV_HAS_OBJ_ID; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50005_PLATFORMV_HAS_OBJ_ID = 50005,
  // PlatformV_HAS_OBJ_TAG; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50006_PLATFORMV_HAS_OBJ_TAG = 50006,
  // PlatformV_HAS_CHILD; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50007_PLATFORMV_HAS_CHILD = 50007,
  // PlatformV_HAS_PROPERTY; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50008_PLATFORMV_HAS_PROPERTY = 50008,
  // PlatformV_HAS_META; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50009_PLATFORMV_HAS_META = 50009,
  // PlatformV_HAS_EVENT; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50010_PLATFORMV_HAS_EVENT = 50010,
  // PlatformV_HAS_ACTION; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50011_PLATFORMV_HAS_ACTION = 50011,
  // PlatformV_IS_TYPE; Ref: [https://github.com/arthurwangtz/platformv-cbor][Wang_Tongzhou]
  CBOR_TAG_50012_PLATFORMV_IS_TYPE = 50012,
  // Self-described CBOR; see Section 3.4.6; Ref: [RFC8949]
  CBOR_TAG_55799_SELF_DESCRIBED_CBOR = 55799,
  // indicates that the file contains CBOR Sequences; Ref: [RFC9277]
  CBOR_TAG_55800_INDICATES_THAT_FILE_CONTAINS_CBOR_SEQUENCES = 55800,
  // indicates that the file starts with a CBOR-Labeled Non-CBOR Data label.; Ref: [RFC9277]
  CBOR_TAG_55801_INDICATES_THAT_FILE_STARTS_WITH_CBOR_LABELED_NON_CBOR_DATA_LABEL = 55801,
  // Compressed byte string; Ref: [https://github.com/dectris/documentation/blob/main/cbor/dectris-compression-tag.md][Kal_Conley]
  CBOR_TAG_56500_COMPRESSED_BYTE_STRING = 56500,
  // Identify and define a set of record structures (each a sequence of property names) that can be referenced as tags in the included value (and the scope for the record tag definitions); Ref: [https://github.com/kriszyp/cbor-records][Kris_Zyp]
  CBOR_TAG_57342_IDENT_DEFINE_SET_OF_REC_STRCT_THAT_CAN_BE_REF_AS_TAGS_IN_INC_VAL = 57342,
  // Identify and define a record structure (a sequence of property names), and use that record structure definition to interpret the included values.; Ref: [https://github.com/kriszyp/cbor-records][Kris_Zyp]
  CBOR_TAG_57343_IDENT_DEFINE_REC_STRCT_USE_THAT_REC_STRCT_DEF_INTERPRET_INC_VALS = 57343,
  // The tagged CBOR array contains attestation evidence data with an Intel TEE quote.; Ref: [Shanwei_Cen]
  CBOR_TAG_60000_TAGGED_CBOR_ARRAY_CONTAINS_ATTEST_EVIDENCE_DATA_WITH_AN_INTEL_TEE_QUOTE = 60000,
  // The tagged CBOR array contains attestation evidence data with an Intel TEE report.; Ref: [Shanwei_Cen]
  CBOR_TAG_60001_TAGGED_CBOR_ARRAY_CONTAINS_ATTEST_EVIDENCE_DATA_WITH_AN_INTEL_TEE_RPT = 60001,
  // The tagged CBOR array contains attestation evidence data with an Intel SGX report.; Ref: [Shanwei_Cen]
  CBOR_TAG_60002_TAGGED_CBOR_ARRAY_CONTAINS_ATTEST_EVIDENCE_DATA_WITH_AN_INTEL_SGX_RPT = 60002,
  // RAINS Message; Ref: [https://britram.github.io/rains-prototype][Brian_Trammell]
  CBOR_TAG_15309736_RAINS_MSG = 15309736,
  // A CBOR encoded Openswan configuration file, as stored on disk forunit test cases.; Ref: [Michael_Richardson][Samir_Hussain]
  CBOR_TAG_1330664270_CBOR_ENC_OPENSWAN_CONFIG_FILE_AS_STORED_ON_DISK_FORUNIT_TEST_CASES = 1330664270,
  // Concise Software Identifier (CoSWID); Ref: [RFC9393]
  CBOR_TAG_1398229316_CONCISE_SOFTWARE_ID = 1398229316,
  // Array of content-addressed blocks and ERIS read capabilities; Ref: [Endo_Renberg]
  CBOR_TAG_1701996915_ARRAY_OF_CONTENT_ADDR_BLOCKS_ERIS_READ_CAP = 1701996915,
  // ERIS-FS image header; Ref: [Endo_Renberg]
  CBOR_TAG_1701996916_ERIS_FS_IMAGE_HEADER = 1701996916,
  // Intel FPGA SPDM Manifest; Ref: [Andrew_Draper]
  CBOR_TAG_4294967296_INTEL_FPGA_SPDM_MANIFEST = 4294967296
} cbor_tag_t;

